{"ast":null,"code":"var _jsxFileName = \"/home/shuvstack/FYP 7th sem/client/src/screens/PrintScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\"; // import { useSelector } from \"react-redux\";\n\nimport saveAs from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 1000,\n    minHeight: 400\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    paddingLeft: 180\n  },\n  pos: {\n    marginBottom: 12\n  },\n  span: {\n    paddingLeft: 100\n  },\n  note: {\n    color: \"red\"\n  },\n  button: {\n    paddingLeft: 10\n  }\n});\n\nfunction PrintScreen(props) {\n  _s();\n\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]); // const userSignin = useSelector((state) => state.userSignin);\n  // const { userInfo } = userSignin;\n  // userID = userInfo._id;\n  // const dispatch = useDispatch();\n  // const bookingDetails = useSelector((state) => state.bookingDetails);\n  // const { booking } = bookingDetails;\n  // console.log(booking._id);\n  // useEffect(() => {\n  //   dispatch(detailsBooking(bookingtId));\n  //   console.log(bookingtId);\n  // }, [dispatch, bookingtId]);\n  // useEffect((id) => {\n  //   axios.get(`http://localhost:5000/api/booking/sendsms/` + id).then((res) => {\n  //     console.log(res);\n  //     const URL = window.location.href;\n  //     console.log(URL);\n  //     setPosts(res.data);\n  //   });\n  // }, []);\n  // try {\n  //     const resp = await axios.post(\n  //       \"http://localhost:5000/api/booking/sendmsg\",\n  //       data\n  //     );\n  //     const bookingID = resp.data._id;\n  //     props.history.push(`/printbooking/` + bookingID);\n  //     console.log(resp.data._id);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // useEffect(() => {\n  //   axios\n  //     .get(`http://localhost:5000/api/booking/sendmsg/` + props.match.params.id)\n  //     .then((res) => {\n  //       console.log(res);\n  //       // setPosts(res);\n  //       // console.log(posts);\n  //     });\n  // }, [props.match.params.id]);\n  // axios.get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n  //     responseType: \"blob\",\n  //   })\n  // )\n  // .then((res) => {\n  //   const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n  //   saveAs(pdfBlob, \"newPDf.pdf\");\n  // });\n  // const sendGetRequest = async () => {\n  //   try {\n  //     const resp = await axios.get(\n  //       `http://localhost:5000/api/booking/sendmsg/` + props.match.params.id\n  //     );\n  //     console.log(resp.data);\n  //     console.log(resp.data._id);\n  //     // console.log(resp.data);\n  //     // setPosts(resp.data);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // };\n  // sendGetRequest();\n\n  const downloadHandler = () => {\n    axios.get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n      responseType: \"blob\"\n    }).then(res => {\n      const pdfBlob = new Blob([res.data], {\n        type: \"application/pdf\"\n      });\n      saveAs(pdfBlob, \"newPDf.pdf\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-topview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-maindiv\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Congratulations,Covid19 Vaccine Registration successful\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-midview\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pnote\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.note,\n                  children: \"Note: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), \" Your Photo ID will be verified at the time of your vaccination appointment. Please provide the details \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.span,\n                  children: \"of the Photo ID you will carry for vaccination.Otherwise you will not be eligible for vaccination.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: classes.button,\n                  onClick: downloadHandler,\n                  children: \"Download PDF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrintScreen, \"puSs4BWAG8xvu8gC6gZDrzGU0Rg=\", false, function () {\n  return [useStyles];\n});\n\n_c = PrintScreen;\nexport default PrintScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintScreen\");","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/screens/PrintScreen.js"],"names":["React","useState","makeStyles","Card","CardContent","Typography","axios","saveAs","useStyles","root","minWidth","maxWidth","minHeight","title","fontSize","fontWeight","paddingLeft","pos","marginBottom","span","note","color","button","PrintScreen","props","classes","posts","setPosts","downloadHandler","get","responseType","then","res","pdfBlob","Blob","data","type"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport axios from \"axios\";\n\n// import { useSelector } from \"react-redux\";\nimport saveAs from \"file-saver\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 1000,\n    minHeight: 400,\n  },\n\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    paddingLeft: 180,\n  },\n\n  pos: {\n    marginBottom: 12,\n  },\n  span: {\n    paddingLeft: 100,\n  },\n  note: {\n    color: \"red\",\n  },\n  button: {\n    paddingLeft: 10,\n  },\n});\n\nfunction PrintScreen(props) {\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  // const userSignin = useSelector((state) => state.userSignin);\n  // const { userInfo } = userSignin;\n  // userID = userInfo._id;\n  // const dispatch = useDispatch();\n\n  // const bookingDetails = useSelector((state) => state.bookingDetails);\n  // const { booking } = bookingDetails;\n  // console.log(booking._id);\n\n  // useEffect(() => {\n  //   dispatch(detailsBooking(bookingtId));\n  //   console.log(bookingtId);\n  // }, [dispatch, bookingtId]);\n  // useEffect((id) => {\n  //   axios.get(`http://localhost:5000/api/booking/sendsms/` + id).then((res) => {\n  //     console.log(res);\n  //     const URL = window.location.href;\n  //     console.log(URL);\n  //     setPosts(res.data);\n  //   });\n  // }, []);\n  // try {\n  //     const resp = await axios.post(\n  //       \"http://localhost:5000/api/booking/sendmsg\",\n  //       data\n  //     );\n\n  //     const bookingID = resp.data._id;\n  //     props.history.push(`/printbooking/` + bookingID);\n  //     console.log(resp.data._id);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // useEffect(() => {\n  //   axios\n  //     .get(`http://localhost:5000/api/booking/sendmsg/` + props.match.params.id)\n  //     .then((res) => {\n  //       console.log(res);\n  //       // setPosts(res);\n  //       // console.log(posts);\n  //     });\n  // }, [props.match.params.id]);\n  // axios.get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n  //     responseType: \"blob\",\n  //   })\n  // )\n  // .then((res) => {\n  //   const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n  //   saveAs(pdfBlob, \"newPDf.pdf\");\n  // });\n\n  // const sendGetRequest = async () => {\n  //   try {\n  //     const resp = await axios.get(\n  //       `http://localhost:5000/api/booking/sendmsg/` + props.match.params.id\n  //     );\n  //     console.log(resp.data);\n  //     console.log(resp.data._id);\n  //     // console.log(resp.data);\n  //     // setPosts(resp.data);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // };\n\n  // sendGetRequest();\n  const downloadHandler = () => {\n    axios\n      .get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n        responseType: \"blob\",\n      })\n\n      .then((res) => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        saveAs(pdfBlob, \"newPDf.pdf\");\n      });\n  };\n\n  return (\n    <div>\n      {/* <ul>\n        {posts.map((post) => (\n          <li key={post._id}>\n            <td>{post.name}</td>\n            <td>{post.hoslocation}</td>\n          </li>\n        ))}\n      </ul> */}\n      <div className=\"form-topview\">\n        <div className=\"form-maindiv\">\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Congratulations,Covid19 Vaccine Registration successful\n              </Typography>\n\n              <div className=\"form-midview\">\n                <p className=\"pnote\">\n                  <span className={classes.note}>Note: </span> Your Photo ID\n                  will be verified at the time of your vaccination appointment.\n                  Please provide the details <br />\n                  <span className={classes.span}>\n                    of the Photo ID you will carry for vaccination.Otherwise you\n                    will not be eligible for vaccination.\n                  </span>\n                </p>\n\n                <div>\n                  <label />\n                  <button className={classes.button} onClick={downloadHandler}>\n                    Download PDF\n                  </button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PrintScreen;\n"]},"metadata":{},"sourceType":"module"}