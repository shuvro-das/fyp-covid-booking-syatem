{"ast":null,"code":"var _jsxFileName = \"/home/shuvstack/FYP 7th sem/client/src/screens/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport LoadingBox from \"../components/LoadingBox.js\";\nimport MessageBox from \"../components/MessageBox.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { detailsUser, updateUser } from \"../actions/UserAction.js\"; // import { USER_UPDATE_RESET } from \"../constants/userConstants.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserEditScreen(props) {\n  _s();\n\n  //   const userId = props.match.params.id;\n  const [data, setData] = useState({});\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isSeller, setIsSeller] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false); //   const userSignin = useSelector((state) => state.userSignin);\n  //   const { userInfo } = userSignin;\n  //   const userDetails = useSelector((state) => state.userDetails);\n  //   const { loading, error, user } = userDetails;\n  //   const dispatch = useDispatch();\n  //   useEffect(() => {\n  //     dispatch(detailsUser(userInfo._id));\n  //   }, [dispatch, userInfo._id]);\n  //   const userUpdate = useSelector((state) => state.userUpdate);\n  //   const {\n  //     loading: loadingUpdate,\n  //     error: errorUpdate,\n  //     success: successUpdate,\n  //   } = userUpdate;\n  //   const dispatch = useDispatch();\n  //   useEffect(() => {\n  //     if (successUpdate) {\n  //       dispatch({ type: USER_UPDATE_RESET });\n  //       props.history.push(\"/userlist\");\n  //     }\n  //     if (!user) {\n  //       dispatch(detailsUser(userId));\n  //     } else {\n  //       setName(user.name);\n  //       setEmail(user.email);\n  //       setIsSeller(user.isSeller);\n  //       setIsAdmin(user.isAdmin);\n  //     }\n  //   }, [user, successUpdate, props.history, dispatch, userId]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/users/\");\n  });\n\n  const submitHandler = e => {\n    e.preventDefault(); // // dispatch update user\n    // dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Edit User \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"text\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isSeller\",\n            children: \"Is Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isSeller\",\n            type: \"checkbox\",\n            checked: isSeller,\n            onChange: e => setIsSeller(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"isSeller\",\n            children: \"Is Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"isAdmin\",\n            type: \"checkbox\",\n            checked: isAdmin,\n            onChange: e => setIsAdmin(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserEditScreen, \"M5UjtB8QNgTLxDWN6kRKdQmLaj4=\");\n\n_c = UserEditScreen;\nexport default UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/screens/UserProfile.js"],"names":["React","useEffect","useState","axios","LoadingBox","MessageBox","useDispatch","useSelector","detailsUser","updateUser","UserEditScreen","props","data","setData","name","setName","email","setEmail","isSeller","setIsSeller","isAdmin","setIsAdmin","get","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport LoadingBox from \"../components/LoadingBox.js\";\nimport MessageBox from \"../components/MessageBox.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { detailsUser, updateUser } from \"../actions/UserAction.js\";\n// import { USER_UPDATE_RESET } from \"../constants/userConstants.js\";\n\nfunction UserEditScreen(props) {\n  //   const userId = props.match.params.id;\n  const [data, setData] = useState({});\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isSeller, setIsSeller] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  //   const userSignin = useSelector((state) => state.userSignin);\n  //   const { userInfo } = userSignin;\n  //   const userDetails = useSelector((state) => state.userDetails);\n  //   const { loading, error, user } = userDetails;\n\n  //   const dispatch = useDispatch();\n  //   useEffect(() => {\n  //     dispatch(detailsUser(userInfo._id));\n  //   }, [dispatch, userInfo._id]);\n\n  //   const userUpdate = useSelector((state) => state.userUpdate);\n  //   const {\n  //     loading: loadingUpdate,\n  //     error: errorUpdate,\n  //     success: successUpdate,\n  //   } = userUpdate;\n\n  //   const dispatch = useDispatch();\n  //   useEffect(() => {\n  //     if (successUpdate) {\n  //       dispatch({ type: USER_UPDATE_RESET });\n  //       props.history.push(\"/userlist\");\n  //     }\n  //     if (!user) {\n  //       dispatch(detailsUser(userId));\n  //     } else {\n  //       setName(user.name);\n  //       setEmail(user.email);\n  //       setIsSeller(user.isSeller);\n  //       setIsAdmin(user.isAdmin);\n  //     }\n  //   }, [user, successUpdate, props.history, dispatch, userId]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/api/users/\");\n  });\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // // dispatch update user\n    // dispatch(updateUser({ _id: userId, name, email, isSeller, isAdmin }));\n  };\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <div>\n          <h1>Edit User {name}</h1>\n        </div>\n        {/* {loadingUpdate && <LoadingBox></LoadingBox>}\n        {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>} */}\n        {/* {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : ( */}\n        <>\n          <div>\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input\n              id=\"email\"\n              type=\"text\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"isSeller\">Is Seller</label>\n            <input\n              id=\"isSeller\"\n              type=\"checkbox\"\n              checked={isSeller}\n              onChange={(e) => setIsSeller(e.target.checked)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"isSeller\">Is Admin</label>\n            <input\n              id=\"isAdmin\"\n              type=\"checkbox\"\n              checked={isAdmin}\n              onChange={(e) => setIsAdmin(e.target.checked)}\n            />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"primary\">\n              Update\n            </button>\n          </div>\n        </>\n      </form>\n    </div>\n  );\n}\n\nexport default UserEditScreen;\n"]},"metadata":{},"sourceType":"module"}