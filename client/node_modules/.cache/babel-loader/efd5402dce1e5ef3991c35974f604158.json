{"ast":null,"code":"var _jsxFileName = \"/home/shuvstack/FYP 7th sem/client/src/screens/PrintScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // import { useSelector } from \"react-redux\";\n\nimport saveAs from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrintScreen(props) {\n  _s();\n\n  const [posts, setPosts] = useState([]); // const userSignin = useSelector((state) => state.userSignin);\n  // const { userInfo } = userSignin;\n  // userID = userInfo._id;\n  // const dispatch = useDispatch();\n  // const bookingDetails = useSelector((state) => state.bookingDetails);\n  // const { booking } = bookingDetails;\n  // console.log(booking._id);\n  // useEffect(() => {\n  //   dispatch(detailsBooking(bookingtId));\n  //   console.log(bookingtId);\n  // }, [dispatch, bookingtId]);\n  // useEffect((id) => {\n  //   axios.get(`http://localhost:5000/api/booking/sendsms/` + id).then((res) => {\n  //     console.log(res);\n  //     const URL = window.location.href;\n  //     console.log(URL);\n  //     setPosts(res.data);\n  //   });\n  // }, []);\n  // try {\n  //     const resp = await axios.post(\n  //       \"http://localhost:5000/api/booking/sendmsg\",\n  //       data\n  //     );\n  //     const bookingID = resp.data._id;\n  //     props.history.push(`/printbooking/` + bookingID);\n  //     console.log(resp.data._id);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // useEffect(() => {\n  //   axios\n  //     .get(`http://localhost:5000/api/booking/sendmsg/` + props.match.params.id)\n  //     .then((res) => {\n  //       console.log(res);\n  //       // setPosts(res);\n  //       // console.log(posts);\n  //     });\n  // }, [props.match.params.id]);\n  // axios.get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n  //     responseType: \"blob\",\n  //   })\n  // )\n  // .then((res) => {\n  //   const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n  //   saveAs(pdfBlob, \"newPDf.pdf\");\n  // });\n  // const sendGetRequest = async () => {\n  //   try {\n  //     const resp = await axios.get(\n  //       `http://localhost:5000/api/booking/sendmsg/` + props.match.params.id\n  //     );\n  //     console.log(resp.data);\n  //     console.log(resp.data._id);\n  //     // console.log(resp.data);\n  //     // setPosts(resp.data);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // };\n  // sendGetRequest();\n\n  const downloadHandler = () => {\n    axios.get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n      responseType: \"blob\"\n    }).then(res => {\n      const pdfBlob = new Blob([res.data], {\n        type: \"application/pdf\"\n      });\n      saveAs(pdfBlob, \"newPDf.pdf\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-topview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-maindiv\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              color: \"textSecondary\",\n              gutterBottom: true,\n              children: \"Register For Vaccination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-midview\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"pnote\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.note,\n                  children: \"Note: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), \" Your Photo ID will be verified at the time of your vaccination appointment. Please provide the details \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.span,\n                  children: \"of the Photo ID you will carry for vaccination.Otherwise you will not be eligible for vaccination.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PrintScreen, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n\n_c = PrintScreen;\nexport default PrintScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrintScreen\");","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/screens/PrintScreen.js"],"names":["React","useEffect","useState","axios","saveAs","PrintScreen","props","posts","setPosts","downloadHandler","get","responseType","then","res","pdfBlob","Blob","data","type","classes","root","title","note","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,YAAnB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CAD0B,CAE1B;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMO,eAAe,GAAG,MAAM;AAC5BN,IAAAA,KAAK,CACFO,GADH,CACO,6CADP,EACsD;AAClDC,MAAAA,YAAY,EAAE;AADoC,KADtD,EAKGC,IALH,CAKSC,GAAD,IAAS;AACb,YAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,GAAG,CAACG,IAAL,CAAT,EAAqB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAArB,CAAhB;AACAb,MAAAA,MAAM,CAACU,OAAD,EAAU,YAAV,CAAN;AACD,KARH;AASD,GAVD;;AAYA,sBACE;AAAA,2BAeE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAEI,OAAO,CAACC,IAAzB;AAAA,iCACE,QAAC,WAAD;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,SAAS,EAAED,OAAO,CAACE,KADrB;AAEE,cAAA,KAAK,EAAC,eAFR;AAGE,cAAA,YAAY,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCACE;AAAG,gBAAA,SAAS,EAAC,OAAb;AAAA,wCACE;AAAM,kBAAA,SAAS,EAAEF,OAAO,CAACG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,2HAG6B;AAAA;AAAA;AAAA;AAAA,wBAH7B,eAIE;AAAM,kBAAA,SAAS,EAAEH,OAAO,CAACI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GA/HQjB,W;;KAAAA,W;AAiIT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport axios from \"axios\";\n\n// import { useSelector } from \"react-redux\";\nimport saveAs from \"file-saver\";\n\nfunction PrintScreen(props) {\n  const [posts, setPosts] = useState([]);\n  // const userSignin = useSelector((state) => state.userSignin);\n  // const { userInfo } = userSignin;\n  // userID = userInfo._id;\n  // const dispatch = useDispatch();\n\n  // const bookingDetails = useSelector((state) => state.bookingDetails);\n  // const { booking } = bookingDetails;\n  // console.log(booking._id);\n\n  // useEffect(() => {\n  //   dispatch(detailsBooking(bookingtId));\n  //   console.log(bookingtId);\n  // }, [dispatch, bookingtId]);\n  // useEffect((id) => {\n  //   axios.get(`http://localhost:5000/api/booking/sendsms/` + id).then((res) => {\n  //     console.log(res);\n  //     const URL = window.location.href;\n  //     console.log(URL);\n  //     setPosts(res.data);\n  //   });\n  // }, []);\n  // try {\n  //     const resp = await axios.post(\n  //       \"http://localhost:5000/api/booking/sendmsg\",\n  //       data\n  //     );\n\n  //     const bookingID = resp.data._id;\n  //     props.history.push(`/printbooking/` + bookingID);\n  //     console.log(resp.data._id);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // useEffect(() => {\n  //   axios\n  //     .get(`http://localhost:5000/api/booking/sendmsg/` + props.match.params.id)\n  //     .then((res) => {\n  //       console.log(res);\n  //       // setPosts(res);\n  //       // console.log(posts);\n  //     });\n  // }, [props.match.params.id]);\n  // axios.get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n  //     responseType: \"blob\",\n  //   })\n  // )\n  // .then((res) => {\n  //   const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n  //   saveAs(pdfBlob, \"newPDf.pdf\");\n  // });\n\n  // const sendGetRequest = async () => {\n  //   try {\n  //     const resp = await axios.get(\n  //       `http://localhost:5000/api/booking/sendmsg/` + props.match.params.id\n  //     );\n  //     console.log(resp.data);\n  //     console.log(resp.data._id);\n  //     // console.log(resp.data);\n  //     // setPosts(resp.data);\n  //   } catch (err) {\n  //     // Handle Error Here\n  //     console.error(err);\n  //   }\n  // };\n\n  // sendGetRequest();\n  const downloadHandler = () => {\n    axios\n      .get(\"http://localhost:5000/api/booking/fetch-pdf\", {\n        responseType: \"blob\",\n      })\n\n      .then((res) => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n        saveAs(pdfBlob, \"newPDf.pdf\");\n      });\n  };\n\n  return (\n    <div>\n      {/* <h1>Thank You for registering</h1>\n      <p>PLease don't forget to carry your photo id and print out copy </p>\n      <div>\n        <label />\n        <button onClick={downloadHandler}>Download PDF</button>\n      </div> */}\n      {/* <ul>\n        {posts.map((post) => (\n          <li key={post._id}>\n            <td>{post.name}</td>\n            <td>{post.hoslocation}</td>\n          </li>\n        ))}\n      </ul> */}\n      <div className=\"form-topview\">\n        <div className=\"form-maindiv\">\n          <Card className={classes.root}>\n            <CardContent>\n              <Typography\n                className={classes.title}\n                color=\"textSecondary\"\n                gutterBottom\n              >\n                Register For Vaccination\n              </Typography>\n\n              <div className=\"form-midview\">\n                <p className=\"pnote\">\n                  <span className={classes.note}>Note: </span> Your Photo ID\n                  will be verified at the time of your vaccination appointment.\n                  Please provide the details <br />\n                  <span className={classes.span}>\n                    of the Photo ID you will carry for vaccination.Otherwise you\n                    will not be eligible for vaccination.\n                  </span>\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PrintScreen;\n"]},"metadata":{},"sourceType":"module"}