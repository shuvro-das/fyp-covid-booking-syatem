{"ast":null,"code":"import { BOOKING_REGISTRATION_DATA_REQUEST, BOOKING_REGISTRATION_DATA_FAIL, BOOKING_REGISTRATION_DATA_SUCCESS } from \"../constants/BookingConstants.js\";\nimport Axios from \"axios\"; // export const userBooking = () => async (dispatch, getState) => {\n//   dispatch({ type: BOOKING_REGISTRATION_DATA_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.post(\n//       \"/api/booking\",\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({\n//       type: BOOKING_REGISTRATION_DATA_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BOOKING_REGISTRATION_DATA_FAIL, payload: message });\n//   }\n// };\n\nexport const createBooking = booking => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_REGISTRATION_DATA_REQUEST,\n    payload: booking\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post(\"/api/booking\", booking, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/actions/BookingAction.js"],"names":["BOOKING_REGISTRATION_DATA_REQUEST","BOOKING_REGISTRATION_DATA_FAIL","BOOKING_REGISTRATION_DATA_SUCCESS","Axios","createBooking","booking","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","error","response","message"],"mappings":"AAAA,SACEA,iCADF,EAEEC,8BAFF,EAGEC,iCAHF,QAIO,kCAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtED,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAER,iCADC;AAEPS,IAAAA,OAAO,EAAEJ;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AACJK,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFJ,QAAQ,EAFZ;AAIA,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMT,KAAK,CAACU,IAAN,CAAW,cAAX,EAA2BR,OAA3B,EAAoC;AACzDS,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASJ,QAAQ,CAACK,KAAM;AAA1C;AADgD,KAApC,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,iCADC;AAEPO,MAAAA,OAAO,EAAEG;AAFF,KAAD,CAAR;AAID,GAZD,CAYE,OAAOK,KAAP,EAAc;AACdX,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,8BADC;AAEPQ,MAAAA,OAAO,EACLQ,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA1BM","sourcesContent":["import {\n  BOOKING_REGISTRATION_DATA_REQUEST,\n  BOOKING_REGISTRATION_DATA_FAIL,\n  BOOKING_REGISTRATION_DATA_SUCCESS,\n} from \"../constants/BookingConstants.js\";\nimport Axios from \"axios\";\n\n// export const userBooking = () => async (dispatch, getState) => {\n//   dispatch({ type: BOOKING_REGISTRATION_DATA_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n\n//   try {\n//     const { data } = await Axios.post(\n//       \"/api/booking\",\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({\n//       type: BOOKING_REGISTRATION_DATA_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BOOKING_REGISTRATION_DATA_FAIL, payload: message });\n//   }\n// };\n\nexport const createBooking = (booking) => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_REGISTRATION_DATA_REQUEST,\n    payload: booking,\n  });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n\n    const { data } = await Axios.post(\"/api/booking\", booking, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}