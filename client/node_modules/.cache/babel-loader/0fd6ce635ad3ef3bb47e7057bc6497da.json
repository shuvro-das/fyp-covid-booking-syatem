{"ast":null,"code":"import Axios from \"axios\";\nimport { //   USER_DETAILS_FAIL,\n//   USER_DETAILS_REQUEST,\n//   USER_DETAILS_SUCCESS,\nUSER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS //   USER_SIGNIN_FAIL,\n//   USER_SIGNIN_REQUEST,\n, USER_SIGNIN_SUCCESS //   USER_SIGNOUT,\n//   USER_UPDATE_PROFILE_FAIL,\n//   USER_UPDATE_PROFILE_REQUEST,\n//   USER_UPDATE_PROFILE_SUCCESS,\n//   USER_LIST_REQUEST,\n//   USER_LIST_SUCCESS,\n//   USER_LIST_FAIL,\n//   USER_DELETE_REQUEST,\n//   USER_DELETE_SUCCESS,\n//   USER_DELETE_FAIL,\n} from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // export const signin = (email, password) => async (dispatch) => {\n//   dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_SIGNIN_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n// export const signout = () => (dispatch) => {\n//   localStorage.removeItem(\"userInfo\");\n//   localStorage.removeItem(\"cartItems\");\n//   localStorage.removeItem(\"shippingAddress\");\n//   dispatch({ type: USER_SIGNOUT });\n//   document.location.href = \"/signin\";\n// };\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo?.token}` },\n//     });\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//   }\n// };\n// export const listUsers = () => async (dispatch, getState) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(\"/api/users\", {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n// export const deleteUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.delete(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DELETE_FAIL, payload: message });\n//   }\n// };","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/actions/UserAction.js"],"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_SUCCESS","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACE;AACA;AACA;AACAC,kBAJF,EAKEC,qBALF,EAMEC,qBANF,CAOE;AACA;AARF,EASEC,mBATF,CAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBF,OAoBO,4BApBP;AAsBA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AACrEA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,qBAAR;AAA+BS,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,qBAAX,EAAkC;AACvDP,MAAAA,IADuD;AAEvDC,MAAAA,KAFuD;AAGvDC,MAAAA;AAHuD,KAAlC,CAAvB;AAKAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,qBAAR;AAA+BQ,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,mBAAR;AAA6BO,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAE,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;AACD,GATD,CASE,OAAOM,KAAP,EAAc;AACdT,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,kBADC;AAEPU,MAAAA,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CApBM,C,CAsBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Axios from \"axios\";\n\nimport {\n  //   USER_DETAILS_FAIL,\n  //   USER_DETAILS_REQUEST,\n  //   USER_DETAILS_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  //   USER_SIGNIN_FAIL,\n  //   USER_SIGNIN_REQUEST,\n  USER_SIGNIN_SUCCESS,\n  //   USER_SIGNOUT,\n  //   USER_UPDATE_PROFILE_FAIL,\n  //   USER_UPDATE_PROFILE_REQUEST,\n  //   USER_UPDATE_PROFILE_SUCCESS,\n  //   USER_LIST_REQUEST,\n  //   USER_LIST_SUCCESS,\n  //   USER_LIST_FAIL,\n  //   USER_DELETE_REQUEST,\n  //   USER_DELETE_SUCCESS,\n  //   USER_DELETE_FAIL,\n} from \"../constants/userConstants\";\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password,\n    });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// export const signin = (email, password) => async (dispatch) => {\n//   dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n//   try {\n//     const { data } = await Axios.post(\"/api/users/signin\", { email, password });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_SIGNIN_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\n// export const signout = () => (dispatch) => {\n//   localStorage.removeItem(\"userInfo\");\n//   localStorage.removeItem(\"cartItems\");\n//   localStorage.removeItem(\"shippingAddress\");\n//   dispatch({ type: USER_SIGNOUT });\n//   document.location.href = \"/signin\";\n// };\n\n// export const detailsUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n\n//   try {\n//     const { data } = await Axios.get(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo?.token}` },\n//     });\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DETAILS_FAIL, payload: message });\n//   }\n// };\n\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//   dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.put(`/api/users/profile`, user, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n//     dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n//   }\n// };\n\n// export const listUsers = () => async (dispatch, getState) => {\n//   dispatch({ type: USER_LIST_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.get(\"/api/users\", {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_LIST_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_LIST_FAIL, payload: message });\n//   }\n// };\n\n// export const deleteUser = (userId) => async (dispatch, getState) => {\n//   dispatch({ type: USER_DELETE_REQUEST, payload: userId });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.delete(`/api/users/${userId}`, {\n//       headers: { Authorization: `Bearer ${userInfo.token}` },\n//     });\n//     dispatch({ type: USER_DELETE_SUCCESS, payload: data });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: USER_DELETE_FAIL, payload: message });\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}