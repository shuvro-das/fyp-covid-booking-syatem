{"ast":null,"code":"import { BOOKING_REGISTRATION_DATA_REQUEST, BOOKING_REGISTRATION_DATA_FAIL, BOOKING_REGISTRATION_DATA_SUCCESS } from \"../constants/BookingConstants.js\";\nimport Axios from \"axios\"; // export const userBooking = () => async (dispatch, getState) => {\n//   dispatch({ type: BOOKING_REGISTRATION_DATA_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.post(\n//       \"/api/booking\",\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({\n//       type: BOOKING_REGISTRATION_DATA_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BOOKING_REGISTRATION_DATA_FAIL, payload: message });\n//   }\n// };\n\nexport const createBooking = booking => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_REGISTRATION_DATA_REQUEST,\n    payload: booking\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/booking\", {\n      name\n    });\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_SUCCESS,\n      payload: data\n    }); //   dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/actions/BookingAction.js"],"names":["BOOKING_REGISTRATION_DATA_REQUEST","BOOKING_REGISTRATION_DATA_FAIL","BOOKING_REGISTRATION_DATA_SUCCESS","Axios","createBooking","booking","dispatch","getState","type","payload","data","post","name","error","response","message"],"mappings":"AAAA,SACEA,iCADF,EAEEC,8BAFF,EAGEC,iCAHF,QAIO,kCAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACtED,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAER,iCADC;AAEPS,IAAAA,OAAO,EAAEJ;AAFF,GAAD,CAAR;;AAIA,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,IAAN,CAAW,cAAX,EAA2B;AAChDC,MAAAA;AADgD,KAA3B,CAAvB;AAGAN,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEN,iCAAR;AAA2CO,MAAAA,OAAO,EAAEC;AAApD,KAAD,CAAR,CAJE,CAKF;AACD,GAND,CAME,OAAOG,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,8BADC;AAEPQ,MAAAA,OAAO,EACLI,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CApBM","sourcesContent":["import {\n  BOOKING_REGISTRATION_DATA_REQUEST,\n  BOOKING_REGISTRATION_DATA_FAIL,\n  BOOKING_REGISTRATION_DATA_SUCCESS,\n} from \"../constants/BookingConstants.js\";\nimport Axios from \"axios\";\n\n// export const userBooking = () => async (dispatch, getState) => {\n//   dispatch({ type: BOOKING_REGISTRATION_DATA_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n\n//   try {\n//     const { data } = await Axios.post(\n//       \"/api/booking\",\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({\n//       type: BOOKING_REGISTRATION_DATA_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BOOKING_REGISTRATION_DATA_FAIL, payload: message });\n//   }\n// };\n\nexport const createBooking = (booking) => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_REGISTRATION_DATA_REQUEST,\n    payload: booking,\n  });\n  try {\n    const { data } = await Axios.post(\"/api/booking\", {\n      name,\n    });\n    dispatch({ type: BOOKING_REGISTRATION_DATA_SUCCESS, payload: data });\n    //   dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}