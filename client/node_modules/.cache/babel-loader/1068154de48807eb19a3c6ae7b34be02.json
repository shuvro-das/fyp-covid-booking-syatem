{"ast":null,"code":"import { BOOKING_REGISTRATION_DATA_REQUEST, BOOKING_REGISTRATION_DATA_FAIL, BOOKING_REGISTRATION_DATA_SUCCESS } from \"../constants/BookingConstants.js\";\nimport Axios from \"axios\"; // export const userBooking = () => async (dispatch, getState) => {\n//   dispatch({ type: BOOKING_REGISTRATION_DATA_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n//   try {\n//     const { data } = await Axios.post(\n//       \"/api/booking\",\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({\n//       type: BOOKING_REGISTRATION_DATA_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BOOKING_REGISTRATION_DATA_FAIL, payload: message });\n//   }\n// };\n\nexport const userBooking = (name, mobilenumber, birthdate, age, phohotidproof, sideinfo, hoslocation) => async dispatch => {\n  dispatch({\n    type: BOOKING_REGISTRATION_DATA_REQUEST,\n    payload: {\n      name,\n      mobilenumber,\n      birthdate,\n      age,\n      phohotidproof,\n      sideinfo,\n      hoslocation\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/booking\", {\n      name\n    });\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_SUCCESS,\n      payload: data\n    }); //   dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/shuvstack/FYP 7th sem/client/src/actions/BookingAction.js"],"names":["BOOKING_REGISTRATION_DATA_REQUEST","BOOKING_REGISTRATION_DATA_FAIL","BOOKING_REGISTRATION_DATA_SUCCESS","Axios","userBooking","name","mobilenumber","birthdate","age","phohotidproof","sideinfo","hoslocation","dispatch","type","payload","data","post","error","response","message"],"mappings":"AAAA,SACEA,iCADF,EAEEC,8BAFF,EAGEC,iCAHF,QAIO,kCAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GACtB,CAACC,IAAD,EAAOC,YAAP,EAAqBC,SAArB,EAAgCC,GAAhC,EAAqCC,aAArC,EAAoDC,QAApD,EAA8DC,WAA9D,KACA,MAAOC,QAAP,IAAoB;AAClBA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEb,iCADC;AAEPc,IAAAA,OAAO,EAAE;AACPT,MAAAA,IADO;AAEPC,MAAAA,YAFO;AAGPC,MAAAA,SAHO;AAIPC,MAAAA,GAJO;AAKPC,MAAAA,aALO;AAMPC,MAAAA,QANO;AAOPC,MAAAA;AAPO;AAFF,GAAD,CAAR;;AAYA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,cAAX,EAA2B;AAChDX,MAAAA;AADgD,KAA3B,CAAvB;AAGAO,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,iCAAR;AAA2CY,MAAAA,OAAO,EAAEC;AAApD,KAAD,CAAR,CAJE,CAKF;AACD,GAND,CAME,OAAOE,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,8BADC;AAEPa,MAAAA,OAAO,EACLG,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI,OADxB,GAEIF,KAAK,CAACE;AALL,KAAD,CAAR;AAOD;AACF,CA9BI","sourcesContent":["import {\n  BOOKING_REGISTRATION_DATA_REQUEST,\n  BOOKING_REGISTRATION_DATA_FAIL,\n  BOOKING_REGISTRATION_DATA_SUCCESS,\n} from \"../constants/BookingConstants.js\";\nimport Axios from \"axios\";\n\n// export const userBooking = () => async (dispatch, getState) => {\n//   dispatch({ type: BOOKING_REGISTRATION_DATA_REQUEST });\n//   const {\n//     userSignin: { userInfo },\n//   } = getState();\n\n//   try {\n//     const { data } = await Axios.post(\n//       \"/api/booking\",\n//       {},\n//       {\n//         headers: { Authorization: `Bearer ${userInfo.token}` },\n//       }\n//     );\n//     dispatch({\n//       type: BOOKING_REGISTRATION_DATA_SUCCESS,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     dispatch({ type: BOOKING_REGISTRATION_DATA_FAIL, payload: message });\n//   }\n// };\n\nexport const userBooking =\n  (name, mobilenumber, birthdate, age, phohotidproof, sideinfo, hoslocation) =>\n  async (dispatch) => {\n    dispatch({\n      type: BOOKING_REGISTRATION_DATA_REQUEST,\n      payload: {\n        name,\n        mobilenumber,\n        birthdate,\n        age,\n        phohotidproof,\n        sideinfo,\n        hoslocation,\n      },\n    });\n    try {\n      const { data } = await Axios.post(\"/api/booking\", {\n        name,\n      });\n      dispatch({ type: BOOKING_REGISTRATION_DATA_SUCCESS, payload: data });\n      //   dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: BOOKING_REGISTRATION_DATA_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n"]},"metadata":{},"sourceType":"module"}